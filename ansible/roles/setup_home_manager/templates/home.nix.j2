{ config, pkgs, ... }:

{
  # Home Manager configuration for Ubuntu developer environment
  home.username = "{{ ansible_user }}";
  home.homeDirectory = "/home/{{ ansible_user }}";
  home.stateVersion = "23.11"; # Please read the comment before changing.

  # Enable Nix flakes support
  nix = {
    package = pkgs.nix;
    settings.experimental-features = [ "nix-command" "flakes" ];
  };

  # Enable Home Manager
  programs.home-manager.enable = true;

  # USER LAYER - Shell configuration
  programs.zsh = {
    enable = true;
    enableCompletion = true;
    autosuggestion.enable = true;
    syntaxHighlighting.enable = true;
    
    oh-my-zsh = {
      enable = true;
      plugins = [ {% for plugin in setup_home_manager_shell.oh_my_zsh.plugins %}"{{ plugin }}"{% if not loop.last %} {% endif %}{% endfor %} ];
      theme = "{{ setup_home_manager_shell.oh_my_zsh.theme }}";
    };
    
    shellAliases = {
{% for alias, command in setup_home_manager_shell.aliases.items() %}
      "{{ alias }}" = {{ command | to_json }};
{% endfor %}
    };
  };

  # USER LAYER - Git configuration
  programs.git = {
    enable = true;
    userName = "{{ setup_home_manager_git.user_name }}";
    userEmail = "{{ setup_home_manager_git.user_email }}";
    
    extraConfig = {
      init.defaultBranch = "{{ setup_home_manager_git.default_branch }}";
      push.default = "{{ setup_home_manager_git.push_default }}";
      pull.rebase = {{ setup_home_manager_git.pull_rebase | lower }};
      core.editor = "{{ setup_home_manager_git.editor }}";
      commit.gpgsign = {{ setup_home_manager_git.gpg_sign | lower }};
    };
    
    includes = [
      { path = "~/.config/git/clients/allopneus"; }
    ];
  };

  # USER LAYER - Development tools
  programs.neovim = {
    enable = true;
    defaultEditor = true;
    viAlias = true;
    vimAlias = true;
  };

  programs.tmux = {
    enable = true;
    terminal = "screen-256color";
    shortcut = "a";
    keyMode = "vi";
    extraConfig = ''
      set -g mouse on
      set -g status-style bg=black,fg=white
    '';
  };

  programs.direnv = {
    enable = true;
    enableZshIntegration = true;
    nix-direnv.enable = true;
  };

  programs.bat = {
    enable = true;
    config = {
      theme = "TwoDark";
      style = "numbers,changes,header";
    };
  };

  programs.fzf = {
    enable = true;
    enableZshIntegration = true;
  };

  # USER LAYER - Development packages
  home.packages = with pkgs; [
{% for package in setup_home_manager_nix_packages %}
    {{ package }}
{% endfor %}
  ];

  # USER LAYER - Fonts configuration
  fonts.fontconfig.enable = true;

  # USER LAYER - Environment variables
  home.sessionVariables = {
{% for var, value in setup_home_manager_environment.items() %}
    {{ var }} = "{{ value }}";
{% endfor %}
  };

  # USER LAYER - XDG directories
  xdg.enable = true;
  
  # Create project template for direnv
  home.file.".envrc.template".text = ''
    # Project-specific environment template
    # Copy this to your project root and customize as needed
    
    # Example: Use specific Node.js version
    # use node 18
    
    # Example: Load Python environment
    # layout python python3
    
    # Example: Load Nix shell
    # use flake .
    
    # Example: Set project-specific environment variables
    # export PROJECT_NAME="my-project"
    # export DATABASE_URL="sqlite:///tmp/dev.db"
  '';

  # Create sample project flake template
  home.file."Documents/project-template/flake.nix".text = ''
    {
      description = "Project development environment";
      
      inputs = {
        nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
        flake-utils.url = "github:numtide/flake-utils";
      };
      
      outputs = { self, nixpkgs, flake-utils }:
        flake-utils.lib.eachDefaultSystem (system:
          let
            pkgs = nixpkgs.legacyPackages.''${system};
          in
          {
            devShells.default = pkgs.mkShell {
              buildInputs = with pkgs; [
                # Add project-specific dependencies here
                # nodejs
                # python3
                # go
                # rust
              ];
              
              shellHook = '''
                echo "Project development environment loaded"
              ''';
            };
          });
    }
  '';

  home.file."Documents/project-template/.envrc".text = ''
    use flake .
  '';
}