---
# Setup Home Manager for user-layer configuration management
- name: Debug Ansible user and environment
  ansible.builtin.debug:
    msg: |
      ansible_user: '{{ ansible_user }}'
      ansible_user_id: '{{ ansible_user_id | default("not set") }}'
      ansible_env.USER: '{{ ansible_env.USER | default("not set") }}'
      ansible_env.HOME: '{{ ansible_env.HOME | default("not set") }}'
      user_home: '{{ user_home }}'

- name: Set user home directory
  ansible.builtin.set_fact:
    user_home: "/home/{{ ansible_user }}"

- name: Ensure home configuration directory exists
  ansible.builtin.file:
    path: "{{ user_home }}/.config/home-manager"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  become: false

- name: Generate Home Manager configuration from template
  ansible.builtin.template:
    src: home.nix.j2
    dest: "{{ user_home }}/.config/home-manager/home.nix"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
    force: true # Ensure the template is always regenerated
  become: false
  register: home_nix_generation

- name: Display template generation result
  ansible.builtin.debug:
    msg: |
      Template generation changed: {{ home_nix_generation.changed }}
      Template generation result: {{ home_nix_generation }}

- name: Generate flake.nix configuration from template
  ansible.builtin.template:
    src: flake.nix.j2
    dest: "{{ user_home }}/.config/home-manager/flake.nix"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
  become: false

- name: Check if Home Manager is installed
  ansible.builtin.command: which home-manager
  register: home_manager_check
  failed_when: false
  changed_when: false
  become: false

- name: Install Home Manager via Nix
  ansible.builtin.shell: |
    . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
    nix --extra-experimental-features 'nix-command flakes' \
        profile install nixpkgs#home-manager
  when: home_manager_check.rc != 0
  become: false
  environment:
    USER: "{{ ansible_user }}"

- name: Ensure user-local Nix profile directory exists
  ansible.builtin.file:
    path: "{{ user_home }}/.local/state/nix/profiles"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  become: false

- name: Ensure system per-user Nix profile directory exists
  ansible.builtin.file:
    path: "/nix/var/nix/profiles/per-user/{{ ansible_user }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  become: true

- name: Initialize Nix user profile
  ansible.builtin.shell: |
    . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
    nix --extra-experimental-features 'nix-command flakes' \
        profile list || true
  become: false
  environment:
    USER: "{{ ansible_user }}"
    HOME: "{{ user_home }}"

- name: Debug generated home.nix configuration
  ansible.builtin.debug:
    msg: |
      User: {{ ansible_user }}
      Home: {{ user_home }}
      Checking lines around aliases...
  when: ansible_verbosity >= 1

- name: Show lines around alias configuration in home.nix
  ansible.builtin.shell: |
    set -o pipefail
    if [ -f "{{ user_home }}/.config/home-manager/home.nix" ]; then
      echo "=== Lines around shell aliases ==="
      sed -n '30,50p' "{{ user_home }}/.config/home-manager/home.nix" | nl -v30
      echo "=== End of alias section ==="
    else
      echo "home.nix file does not exist yet"
    fi
  become: false
  register: home_nix_debug
  changed_when: false

- name: Display home.nix alias section
  ansible.builtin.debug:
    msg: "{{ home_nix_debug.stdout_lines }}"
  when: ansible_verbosity >= 1

- name: Initialize Home Manager configuration
  ansible.builtin.shell: |
    . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
    cd {{ user_home }}/.config/home-manager
    home-manager switch --flake .#{{ ansible_user }} \
        --extra-experimental-features 'nix-command flakes'
  become: false
  environment:
    USER: "{{ ansible_user }}"
    HOME: "{{ user_home }}"
  register: home_manager_init
  changed_when: "'No change' not in home_manager_init.stdout"

- name: Add Nix profile to shell profile
  ansible.builtin.lineinfile:
    path: "{{ user_home }}/.profile"
    line: ". /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh"
    create: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
  become: false

- name: Ensure user can access nix commands
  ansible.builtin.lineinfile:
    path: "{{ user_home }}/.bashrc"
    line: ". /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh"
    create: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
  become: false
