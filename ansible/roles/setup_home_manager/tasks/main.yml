---
#---
# Setup Home Manager for user-layer configuration management (standalone install)

# We expect `nix` to be installed already (nix-daemon). This role configures a
# per-user home-manager flake and installs/activates Home Manager following the
# official standalone instructions: https://nix-community.github.io/home-manager/index.xhtml#sec-install-standalone

- name: Set user home directory
  ansible.builtin.set_fact:
    user_home: "/home/{{ ansible_user }}"

- name: Ensure home-manager config directory exists
  ansible.builtin.file:
    path: "{{ user_home }}/.config/home-manager"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  become: false

- name: Deploy Home Manager core configuration (home.nix)
  ansible.builtin.template:
    src: home.nix.j2
    dest: "{{ user_home }}/.config/home-manager/home.nix"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
  become: false

- name: Deploy Home Manager flake (flake.nix)
  ansible.builtin.template:
    src: flake.nix.j2
    dest: "{{ user_home }}/.config/home-manager/flake.nix"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
  become: false

- name: Ensure per-user Nix profile directory exists
  ansible.builtin.file:
    path: "/nix/var/nix/profiles/per-user/{{ ansible_user }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  become: true

- name: Ensure user-local state directory exists
  ansible.builtin.file:
    path: "{{ user_home }}/.local/state/nix/profiles"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  become: false

- name: Ensure nix profile is sourced from user shell profile
  ansible.builtin.lineinfile:
    path: "{{ user_home }}/.profile"
    line: ". /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh"
    create: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
  become: false

- name: Ensure nix profile is sourced from bashrc (for interactive shells)
  ansible.builtin.lineinfile:
    path: "{{ user_home }}/.bashrc"
    line: >-
      if [ -f /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh ];
      then . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh; fi
    create: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
  become: false

- name: Check whether home-manager command is available
  ansible.builtin.shell: |
    set -euo pipefail
    if command -v home-manager >/dev/null 2>&1; then
      echo yes
    else
      echo no
    fi
  args:
    executable: /bin/bash
  register: home_manager_present
  changed_when: false
  failed_when: false
  become: false

- name: Install Home Manager into user's Nix profile (idempotent)
  ansible.builtin.shell: |
    . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
    nix --extra-experimental-features 'nix-command flakes' profile install \
      --profile /nix/var/nix/profiles/per-user/{{ ansible_user }}/profile \
      nixpkgs#home-manager
  when: home_manager_present.stdout == 'no'
  environment:
    USER: "{{ ansible_user }}"
    HOME: "{{ user_home }}"
  register: install_home_manager
  args:
    executable: /bin/bash
  become: true

- name: Ensure user home directory has correct ownership
  ansible.builtin.file:
    path: "{{ user_home }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  become: true

- name: Ensure user cache directory exists with proper ownership
  ansible.builtin.file:
    path: "{{ user_home }}/.cache"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  become: true

- name: Ensure user local directories exist with proper ownership
  ansible.builtin.file:
    path: "{{ user_home }}/{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  become: true
  loop:
    - .local
    - .local/share
    - .local/state
    - .config

- name: Ensure Nix cache directory exists with proper ownership (recursive)
  ansible.builtin.file:
    path: "{{ user_home }}/.cache/nix"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
    recurse: true
  become: true

- name: Ensure oh-my-zsh cache directory exists with proper ownership
  ansible.builtin.file:
    path: "{{ user_home }}/.cache/oh-my-zsh"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  become: true

- name: Activate Home Manager via flake (home-manager switch)
  ansible.builtin.shell: |
    set -euo pipefail
    # Source nix daemon profile
    . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
    # Change to home-manager config directory
    cd "{{ user_home }}/.config/home-manager"
    # Run home-manager switch with proper environment
    /nix/var/nix/profiles/per-user/{{ ansible_user }}/profile/bin/home-manager \
      switch --flake .#{{ ansible_user }} \
      --extra-experimental-features 'nix-command flakes'
  environment:
    USER: "{{ ansible_user }}"
    HOME: "{{ user_home }}"
    XDG_CACHE_HOME: "{{ user_home }}/.cache"
    XDG_CONFIG_HOME: "{{ user_home }}/.config"
    XDG_DATA_HOME: "{{ user_home }}/.local/share"
    XDG_STATE_HOME: "{{ user_home }}/.local/state"
  register: home_manager_switch
  args:
    executable: /bin/bash
  changed_when: >-
    'No changes' not in (home_manager_switch.stdout | default(''))
    and home_manager_switch.rc == 0
  failed_when: home_manager_switch.rc != 0
  become: true
  become_user: "{{ ansible_user }}"
