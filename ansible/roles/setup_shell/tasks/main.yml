---
- name: Install oh-my-zsh
  ansible.builtin.shell: |
    set -o pipefail
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  args:
    creates: "/home/{{ ansible_user }}/.zshrc"
    executable: /bin/bash
  register: oh_my_zsh_install
  become: true
  become_user: "{{ ansible_user }}"

- name: Install zsh plugins
  ansible.builtin.lineinfile:
    path: "/home/{{ ansible_user }}/.zshrc"
    regexp: "^plugins="
    line: "plugins=({{ setup_shell_zsh_plugins | join(' ') }})"
  when: setup_shell_zsh_plugins | length > 0

- name: Setup zsh aliases
  ansible.builtin.lineinfile:
    dest: "/home/{{ ansible_user }}/.zsh_aliases"
    create: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
    line: "alias {{ item.alias }}='{{ item.command }}'"
    regexp: "^alias {{ item.alias }}="
  with_items: "{{setup_shell_zsh_aliases}}"
  when: setup_shell_zsh_aliases | length > 0

- name: Install Starship
  ansible.builtin.shell: |
    set -o pipefail
    curl -sS https://starship.rs/install.sh | sh -s -- --force
  args:
    creates: "/usr/local/bin/starship"
    executable: /bin/bash
  register: starship_install
  become: true
  become_user: "{{ ansible_user }}"

- name: Configure starship in zsh
  ansible.builtin.blockinfile:
    path: "/home/{{ ansible_user }}/.zshrc"
    insertafter: EOF
    block: |
      eval "$(starship init zsh)"

- name: Configure zsh NVM plugin
  ansible.builtin.lineinfile:
    path: "/home/{{ ansible_user }}/.zshrc"
    search_string: "zstyle ':omz:plugins:nvm'"
    insertafter: "zstyle '"
    line: "zstyle ':omz:plugins:nvm' autoload yes"
