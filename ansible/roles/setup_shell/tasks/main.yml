---
- name: Install oh-my-zsh
  ansible.builtin.include_role:
    name: gantsign.oh-my-zsh
  vars:
    oh_my_setup_shell_zsh_plugins: "{{ setup_shell_zsh_plugins }}"
    oh_my_zsh_update_mode: auto
    users:
      - username: "{{ ansible_user }}"

- name: Install Starship
  ansible.builtin.shell: |
    set -o pipefail
    curl -sS https://starship.rs/install.sh | sh -s -- --force
  args:
    creates: "/usr/local/bin/starship"
    executable: /bin/bash
  register: starship_install

- name: Configure starship in zsh
  ansible.builtin.blockinfile:
    path: "/home/{{ ansible_user }}/.zshrc"
    insertafter: EOF
    block: |
      eval "$(starship init zsh)"

- name: Define aliases
  ansible.builtin.include_role:
    name: IronicBadger.bash_aliases
    apply:
      become: true
      become_user: "{{ ansible_user }}"
  vars:
    bash_aliases:
      - { alias: "cat", command: "batcat -pp" }
      # Enforce security for git aliases
      - {
          alias: "ggl",
          command: 'echo \"\e[31mUse \e[1;31mggfl\e[0m!\" && return 1',
        }
      - {
          alias: "gcam",
          command: 'echo \"\e[31mUse \e[1;31mgcasm\e[0m!\" && return 1',
        }
      - {
          alias: "gcan!",
          command: 'echo \"\e[31mUse \e[1;31mgcans!\e[0m!\" && return 1',
        }

- name: Configure zsh NVM plugin
  ansible.builtin.lineinfile:
    path: "/home/{{ ansible_user }}/.zshrc"
    search_string: "zstyle ':omz:plugins:nvm'"
    insertafter: "zstyle '"
    line: "zstyle ':omz:plugins:nvm' autoload yes"
