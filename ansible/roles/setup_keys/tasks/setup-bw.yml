---
- name: Ensure bitwarden credentials are set
  ansible.builtin.fail:
    msg: >
      setup_keys_bitwarden_server and setup_keys_bitwarden_password are required,
      and either (setup_keys_bitwarden_email) or (setup_keys_bitwarden_client_id and setup_keys_bitwarden_client_secret) are required
  when: >
    not setup_keys_bitwarden_server or
    not setup_keys_bitwarden_password or
    (
      not setup_keys_bitwarden_email and
      (not setup_keys_bitwarden_client_id or not setup_keys_bitwarden_client_secret)
    )

- name: Check if Bitwarden CLI is available
  delegate_to: localhost
  ansible.builtin.stat:
    path: "/nix/var/nix/profiles/per-user/{{ ansible_user }}/profile/bin/bw"
  register: setup_keys_bw_binary
  failed_when: false

- name: Fail if Bitwarden CLI not found
  ansible.builtin.fail:
    msg: >
      Bitwarden CLI (bw) not found at /nix/var/nix/profiles/per-user/{{ ansible_user }}/profile/bin/bw.
      This suggests that Home Manager setup has not completed successfully or bitwarden-cli package was not installed.
      Please ensure the setup_home_manager role has run successfully before setup_keys.
  when: not setup_keys_bw_binary.stat.exists

- name: Login and unlock Bitwarden
  block:
    - name: Get bw server
      delegate_to: localhost
      ansible.builtin.command: /nix/var/nix/profiles/per-user/{{ ansible_user }}/profile/bin/bw config server
      changed_when: false
      register: setup_keys_bw_server

    - name: Set bw server
      when: setup_keys_bw_server.stdout != setup_keys_bitwarden_server
      delegate_to: localhost
      ansible.builtin.command: /nix/var/nix/profiles/per-user/{{ ansible_user }}/profile/bin/bw config server "{{ setup_keys_bitwarden_server }}"

    - name: Get bw status
      delegate_to: localhost
      ansible.builtin.command: /nix/var/nix/profiles/per-user/{{ ansible_user }}/profile/bin/bw status
      changed_when: false
      register: setup_keys_bw_status

    - name: Login to Bitwarden with API key
      when:
        - setup_keys_bw_status.stdout | from_json | community.general.json_query('status') == "unauthenticated"
        - setup_keys_bitwarden_client_id | default('', true) | trim | length > 0
        - setup_keys_bitwarden_client_secret | default('', true) | trim | length > 0
      delegate_to: localhost
      ansible.builtin.command: /nix/var/nix/profiles/per-user/{{ ansible_user }}/profile/bin/bw login --apikey
      environment:
        BW_CLIENTID: "{{ setup_keys_bitwarden_client_id }}"
        BW_CLIENTSECRET: "{{ setup_keys_bitwarden_client_secret }}"
      any_errors_fatal: true

    - name: Login to Bitwarden with email/password
      when:
        - setup_keys_bw_status.stdout | from_json | community.general.json_query('status') == "unauthenticated"
        - setup_keys_bitwarden_email | default('', true) | trim | length > 0
        - setup_keys_bitwarden_password | default('', true) | trim | length > 0
        - not (setup_keys_bitwarden_client_id and setup_keys_bitwarden_client_secret)
      delegate_to: localhost
      ansible.builtin.command: /nix/var/nix/profiles/per-user/{{ ansible_user }}/profile/bin/bw login "{{ setup_keys_bitwarden_email }}" "{{ setup_keys_bitwarden_password }}" --raw
      any_errors_fatal: true

    - name: Get bw status after login
      delegate_to: localhost
      ansible.builtin.command: /nix/var/nix/profiles/per-user/{{ ansible_user }}/profile/bin/bw status
      changed_when: false
      register: setup_keys_bw_status_after_login

    - name: Unlock Bitwarden vault with master password
      when: setup_keys_bw_status_after_login.stdout | from_json | community.general.json_query('status') != "unlocked"
      delegate_to: localhost
      ansible.builtin.command: /nix/var/nix/profiles/per-user/{{ ansible_user }}/profile/bin/bw unlock --raw "{{ setup_keys_bitwarden_password }}"
      register: setup_keys_bw_session_unlock
      no_log: true

    - name: Set session token from unlock
      ansible.builtin.set_fact:
        setup_keys_bw_session: "{{ setup_keys_bw_session_unlock.stdout }}"
      no_log: true
      when: setup_keys_bw_session_unlock is defined and setup_keys_bw_session_unlock.stdout is defined

    - name: Set empty session if already unlocked
      ansible.builtin.set_fact:
        setup_keys_bw_session: ""
      when: setup_keys_bw_status_after_login.stdout | from_json | community.general.json_query('status') == "unlocked"

    - name: Ensure bw is unlocked
      delegate_to: localhost
      ansible.builtin.command: /nix/var/nix/profiles/per-user/{{ ansible_user }}/profile/bin/bw status
      register: setup_keys_bw_status
      changed_when: false
      failed_when: setup_keys_bw_status.stdout | from_json | community.general.json_query('status') != "unlocked"
      environment:
        BW_SESSION: "{{ setup_keys_bw_session | default('') }}"

  rescue:
    - name: Logout from Bitwarden
      delegate_to: localhost
      ansible.builtin.command: /nix/var/nix/profiles/per-user/{{ ansible_user }}/profile/bin/bw logout
    - name: Fail with original error
      ansible.builtin.fail:
        msg: "{{ ansible_failed_result }}"
