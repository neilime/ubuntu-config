---
- name: Ensure mandatory variables are set
  ansible.builtin.fail:
    msg: "key_name, private_key, public_key are required"
  when: not key_name or not private_key or not public_key

- name: Import private key for '{{ key_name }}'
  ansible.builtin.shell: |
    set -o pipefail
    echo '{{ private_key }}' | gpg --import
  register: gpg_import_private_key
  become: true
  become_user: "{{ ansible_user }}"
  failed_when:
    - '"secret key imported" not in gpg_import_private_key.stderr'
    - '"gpg: Total number processed: 1" not in gpg_import_private_key.stderr'
    - '"gpg:       secret keys read: 1" not in gpg_import_private_key.stderr'
    - gpg_import_private_key.rc != 0
  changed_when: '"gpg:  secret keys unchanged: 1" not in gpg_import_private_key.stderr'

- name: Import public key for '{{ key_name }}'
  ansible.builtin.shell: |
    set -o pipefail
    echo '{{ public_key }}' | gpg --import
  register: gpg_import_public_key
  become: true
  become_user: "{{ ansible_user }}"
  failed_when:
    - '"secret key imported" not in gpg_import_public_key.stderr'
    - '"gpg: Total number processed: 1" not in gpg_import_public_key.stderr'
    - '"gpg:       secret keys read: 1" not in gpg_import_public_key.stderr'
    - gpg_import_public_key.rc != 0
  changed_when: '"gpg:  secret keys unchanged: 1" not in gpg_import_public_key.stderr'
