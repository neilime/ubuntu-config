name: Shared - Tests - VM

on:
  workflow_call:

permissions: {}

jobs:
  tests-vm:
    name: Tests - VM
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      BITWARDEN_CLIENT_ID: ${{ secrets.BITWARDEN_CLIENT_ID }}
      BITWARDEN_CLIENT_SECRET: ${{ secrets.BITWARDEN_CLIENT_SECRET }}
      INSTALL_SCRIPT: https://raw.githubusercontent.com/neilime/ubuntu-config/${{ github.head_ref || github.ref_name }}/install.sh
      REPOSITORY_URL: ${{ github.event.repository.clone_url }}
      REPOSITORY_BRANCH: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Lima
        uses: lima-vm/lima-actions/setup@03b96d61959e83b2c737e44162c3088e81de0886 # v1.0.1
        id: lima-actions-setup

      - name: Cache Lima
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.cache/lima
          key: lima-${{ steps.lima-actions-setup.outputs.version }}

      - name: Start Lima Ubuntu Desktop VM
        run: |
          limactl start --name=ubuntu-desktop vm/lima-ubuntu-desktop.yml

      - name: Set up SSH for Lima
        uses: lima-vm/lima-actions/ssh@03b96d61959e83b2c737e44162c3088e81de0886 # v1.0.1
        with:
          name: ubuntu-desktop

      - name: Wait for VM to be ready
        run: |
          echo "⏳ Waiting for VM to be ready..."

          # Wait for SSH to be accessible
          for i in {1..120}; do
            if ssh lima-ubuntu-desktop echo "✅ SSH ready" 2>/dev/null; then
              echo "✅ VM is ready and SSH is up"
              break
            fi
            echo "Attempt $i/120: Waiting for VM..."
            sleep 10
          done

      - name: Run install script
        run: |
          # Create and upload a script to properly set environment variables and run the install script
          cat > /tmp/run_install.sh << 'EOF'
          #!/bin/bash
          set -eu

          # Export environment variables
          export BITWARDEN_CLIENT_ID="$1"
          export BITWARDEN_CLIENT_SECRET="$2"
          export REPOSITORY_URL="$3"
          export REPOSITORY_BRANCH="$4"

          # Download and run the install script
          wget -qO- "$5" | sudo -E sh

          # Create success marker
          sudo touch /e2e.success
          EOF

          # Make the script executable
          chmod +x /tmp/run_install.sh

          # Copy the script to the VM
          scp /tmp/run_install.sh lima-ubuntu-desktop:/tmp/run_install.sh

          # Execute the script on the VM with proper argument passing
          # shellcheck disable=SC2029
          ssh lima-ubuntu-desktop "bash /tmp/run_install.sh \
            '$BITWARDEN_CLIENT_ID' \
            '$BITWARDEN_CLIENT_SECRET' \
            '$REPOSITORY_URL' \
            '$REPOSITORY_BRANCH' \
            '$INSTALL_SCRIPT'"

      - name: Validate Ansible changes in host - Snap packages
        run: |
          ssh lima-ubuntu-desktop '[ -f /e2e.success ] && echo "✅ Success" || { echo "❌ Setup failed"; exit 1; }'
